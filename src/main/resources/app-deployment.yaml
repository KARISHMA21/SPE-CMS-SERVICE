apiVersion: apps/v1
kind: Deployment
metadata:
  name: cms-end-deployment
spec:
  selector:
    matchLabels:
      app: cms-schema-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: cms-schema-mysql
    spec:
      containers:
        - name: cms-service
          image: cms-service:1.0
          ports:
            - containerPort: 8084
          env:   # Setting Enviornmental Variables
            - name: ADMIN   # Setting Database host address from configMap
              valueFrom:
                configMapKeyRef:
                  name: db-config-cms
                  key: admin
            - name: DB_HOST   # Setting Database host address from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config-cms
                  key :  host

            - name: DB_NAME  # Setting Database name from configMap
              valueFrom :
                configMapKeyRef :
                  name : db-config-cms
                  key :  dbName

            - name: DB_USERNAME  # Setting Database username from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  username

            - name: DB_PASSWORD # Setting Database password from Secret
              valueFrom :
                secretKeyRef :
                  name : mysql-secrets
                  key :  password

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: cms-end-svc
spec:
  selector:
    app: cms-schema-mysql
  ports:
    - protocol: "TCP"
      port: 8084 # The port that the service is running on in the cluster
      targetPort: 8084 # The port exposed by the service
  type: NodePort # type of the service.
